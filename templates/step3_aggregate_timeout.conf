input {
  http {
      port => 8080
  }
}
filter {
  mutate {
    remove_field => ["user_agent","http","url","host"]
  }

  if [action] == "start_session" {
    aggregate {
      task_id => "%{user_id}"
      code => "
        map['visited_urls'] = [];
      "
      map_action => "create"
      timeout => 300
      inactivity_timeout => 10
      push_map_as_event_on_timeout => true
      timeout_tags => "_aggregatetimeout"
      timeout_task_id_field => "user_id"
      timeout_code => "
          event.set('message', 'The user left or is in a very long session.')
      "
    }
  }

  if [action] == "visit_url" {
    aggregate {
      task_id => "%{user_id}"
      code => "
        map['visited_urls'] << event.get('visit_url');
      "
      map_action => "update"
    }
  }

  if [action] == "finish_session" {
    aggregate {
      task_id => "%{user_id}"
      code => "
        event.set('visited_urls', map['visited_urls']);
      "
      map_action => "update"
      end_of_task => true
    }
  }
}
output {
  stdout { codec => rubydebug }
}
